[
    {
        "name": "Long Method",
        "treatments": [
            "Extract Method",
            "Replace Temp with Query, Introduce Parameter Object or Preserve Whole Object",
            "Decompose Conditional"
        ]
    },
    {
        "name": "Large Class",
        "treatments": [
            "Extract Class",
            "Extract Subclass",
            "Extract Interface",
            "Duplicate Observed Data"
        ]
    },
    {
        "name": "Primitive Obsession",
        "treatments": [
            "Replace Data Value with Object",
            "Introduce Parameter Object or Preserve Whole Object",
            "Replace Type Code with Class, Replace Type Code with Subclasses or Replace Type Code with State/Strategy",
            "Replace Array with Object"
        ]
    },
    {
        "name": "Long Parameter List",
        "treatments": [
            "Replace Parameter with Method Call",
            "Preserve Whole Object",
            "Introduce Parameter Object"
        ]
    },
    {
        "name": "Data Clumps",
        "treatments": [
            "Extract Class",
            "Introduce Parameter Object",
            "Preserve Whole Object"
        ]
    },
    {
        "name": "Switch Statements",
        "treatments": [
            "Extract Method & then Move Method",
            "Replace Type Code with Subclasses or Replace Type Code with State/Strategy",
            "Replace Conditional with Polymorphism",
            "Replace Parameter with Explicit Methods",
            "Introduce Null Object"
        ]
    },
    {
        "name": "Temporary Field",
        "treatments": [
            "Extract Class or Replace Method with Method Object.",
            "Introduce Null Object"
        ]
    },
    {
        "name": "Refused Bequest",
        "treatments": [
            "Replace Inheritance with Delegation",
            "Extract Superclass"
        ]
    },
    {
        "name": "Alternative Classes with Different Interfaces",
        "treatments": [
            "Rename Method",
            "Move Method, Add Parameter & Parameterize Method",
            "Extract Superclass"
        ]
    },
    {
        "name": "Divergent Change",
        "treatments": [
            "Extract Class",
            "Extract Superclass & Extract Subclass"
        ]
    },
    {
        "name": "Shotgun Surgery",
        "treatments": [
            "Move Method & Move Field",
            "Inline Class"
        ]
    },
    {
        "name": "Parallel Inheritance Hierarchies",
        "treatments": [
            "Move Method & Move Field"
        ]
    },
    {
        "name": "Comments",
        "treatments": [
            "Extract Variable",
            "Extract Method",
            "Rename Method",
            "Introduce Assertion"
        ]
    },
    {
        "name": "Duplicate Code",
        "treatments": [
            "Extract Method",
            "Extract Method & Pull Up Field",
            "Pull Up Constructor Body",
            "Form Template Method",
            "Substitute Algorithm",
            "Extract Superclass",
            "Extract Class",
            "Consolidate Conditional Expression and use Extract Method",
            "Consolidate Duplicate Conditional Fragments"
        ]
    },
    {
        "name": "Lazy Class",
        "treatments": [
            "Inline Class",
            "Collapse Hierarchy"
        ]
    },
    {
        "name": "Data Class",
        "treatments": [
            "Encapsulate Field",
            "Encapsulate Collection",
            "Move Method and Extract Method",
            "Remove Setting Method and Hide Method"
        ]
    },
    {
        "name": "Dead Code",
        "treatments": [
            "Remove Unused Code",
            "Inline Class or Collapse Hierarchy",
            "Remove Parameter"
        ]
    },
    {
        "name": "Speculative Generality",
        "treatments": [
            "Collapse Hierarchy",
            "Inline Class",
            "Inline Method",
            "Remove Parameter"
        ]
    },
    {
        "name": "Feature Envy",
        "treatments": [
            "Move Method",
            "Extract Method",
            "Extract Method with Move Method"
        ]
    },
    {
        "name": "Inappropriate Intimacy",
        "treatments": [
            "Move Method & Move Field",
            "Extract Class & Hide Delegate",
            "Change Bidirectional Association to Unidirectional",
            "Replace Delegation with Inheritance"
        ]
    },
    {
        "name": "Message Chains",
        "treatments": [
            "Hide Delegate",
            "Extract Method & Move Method"
        ]
    },
    {
        "name": "Middle Man",
        "treatments": [
            "Remove Middle Man"
        ]
    },
    {
        "name": "Incomplete Library Class",
        "treatments": [
            "Introduce Foreign Method",
            "Introduce Local Extension"
        ]
    }
]